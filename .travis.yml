language: python
matrix:

   include:

       - os: osx
         language: generic
         sudo: false
         python: "2.7"
         env: PYTHON_VERSION="2.7"  ANUGA_PARALLEL="conda"  PYPAR_AVAILABLE="mpi4py" DISTRIB="conda_macos"

       - os: linux
         language: generic
         sudo: required
         python: "2.7"
         env: PYTHON_VERSION="2.7"  ANUGA_PARALLEL="conda"  PYPAR_AVAILABLE="mpi4py" DISTRIB="conda"
         
       - os: linux
         language: generic
         sudo: required
         python: "3.8"
         env: PYTHON_VERSION="3.8"  ANUGA_PARALLEL="conda"  PYPAR_AVAILABLE="mpi4py" DISTRIB="conda"

       - os: linux
         dist: xenial
         sudo: required
         python: "2.7_with_system_site_packages"
         env: PYTHON_VERSION="2.7"  ANUGA_PARALLEL="false"  DISTRIB="ubuntu"

       - os: linux
         dist: xenial
         sudo: required
         python: "2.7_with_system_site_packages"
         env: PYTHON_VERSION="2.7"  ANUGA_PARALLEL="openmpi"  PYPAR_AVAILABLE="mpi4py" DISTRIB="ubuntu"

install:
    - if [[ "$DISTRIB" == "conda_macos" ]]; then source tools/install_conda_macos.sh; fi
    - if [[ "$DISTRIB" == "conda" ]]; then source tools/install_conda.sh; fi
    - if [[ "$DISTRIB" == "ubuntu" ]]; then source tools/install_ubuntu.sh; fi
    - if [[ "$COVERAGE" == "--coverage" ]]; then pip install coverage coveralls; fi


script:
    - python runtests.py $COVERAGE
    - if [[ "$COVERAGE" == "--coverage" ]]; then cp build/test/.coverage .; fi

after_success:
    - if [[ "$COVERAGE" == "--coverage" ]]; then coveralls || echo "failed"; fi
